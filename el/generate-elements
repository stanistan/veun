#!/bin/bash

cat << EOF > "$2"
// Code generated by ./generate-elements in $GOFILE with source: $1; DO NOT EDIT.
package $GOPACKAGE

import (
  "context"

  "github.com/stanistan/veun"
)
EOF

for line in $(cat $1)
do
  IFS=';' read -ra input <<< "$line"
  el="${input[0]}"
  name="$(echo $el | tr '[:upper:]' '[:lower:]')"
  t="Param"
  fn="newElementWithChildren"

  if [ "${input[1]}" = "void" ]; then
    t="VoidParam"
    fn="newVoidElement"
  fi

  cat << EOF >> "$2"

// $el is struct representation of the *$name* HTML elmenent.
//
// This struct is autogenerated.
type $el []$t

// View fulfills the [veun.AsView] interface. It applies all of
// the options for [$el].
//
// This function is autogenerated.
func (v $el) View(ctx context.Context) (*veun.View, error) {
  return $fn("$name", v).View(ctx)
}

// applyToElement appends $el to the given [*element].
//
// This function is autogenerated.
func (v $el) applyToElement(e *element[nodeChildren]) { e.inner = append(e.inner, v) }
EOF
done

gofmt -w "$2"
